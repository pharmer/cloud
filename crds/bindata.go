// Package crds Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// cloud.pharmer.io_cloudproviders.v1.yaml
// cloud.pharmer.io_cloudproviders.yaml
// cloud.pharmer.io_credentialformats.v1.yaml
// cloud.pharmer.io_credentialformats.yaml
// cloud.pharmer.io_credentials.v1.yaml
// cloud.pharmer.io_credentials.yaml
// cloud.pharmer.io_kubernetesversions.v1.yaml
// cloud.pharmer.io_kubernetesversions.yaml
// cloud.pharmer.io_machinetypes.v1.yaml
// cloud.pharmer.io_machinetypes.yaml
package crds

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cloudPharmerIo_cloudprovidersV1Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x4d\x6f\xe3\x36\x13\xbe\xfb\x57\x0c\xf0\xbe\xc0\xda\xdd\xca\xee\xa2\x97\xd6\x97\x45\x91\x6e\x8b\xc5\x36\x68\x90\x04\xb9\x64\x53\x80\xa6\xc6\x32\x63\x89\x64\xf9\x61\xac\x17\xf9\xf1\x05\x29\x69\x2d\xd9\x22\xad\xd8\x71\xd3\x83\xe7\x64\x8a\xc3\x87\xe4\xcc\xf0\x99\x21\x4d\x24\xbb\x43\xa5\x99\xe0\x53\x20\x92\xe1\x17\x83\xdc\xb5\xf4\x78\xf9\x93\x1e\x33\x31\x59\xbd\x1b\x2c\x19\x4f\xa7\x70\x61\xb5\x11\xc5\x35\x6a\x61\x15\xc5\x5f\x71\xce\x38\x33\x4c\xf0\x41\x81\x86\xa4\xc4\x90\xe9\x00\x80\x2a\x24\xee\xe3\x2d\x2b\x50\x1b\x52\xc8\x29\x70\x9b\xe7\x03\x80\x9c\xcc\x30\xd7\x4e\x07\x80\x48\x39\x5e\xda\x19\x2a\x8e\x06\xfd\x2c\x9c\x14\x38\x05\xb9\x20\xaa\x40\x35\x00\x28\xdb\x34\x17\x36\x95\x4a\xac\x58\x8a\x4a\x8f\x7d\x73\x5c\x29\x8d\x99\x18\x68\x89\xd4\x21\x66\x4a\x58\x59\xa9\x37\xfb\x4b\x9c\x6a\x52\x4a\x0c\x66\x42\xb1\xba\x9d\x34\xa6\x73\x2d\x22\xa5\xa6\x22\x45\xdf\xac\xb6\xec\x00\xaf\xaa\xf9\xfd\xf7\x9c\x69\xf3\x69\xb7\xef\x0f\xa6\x8d\xef\x97\xb9\x55\x24\xdf\x5e\xb9\xef\xd2\x8c\x67\x36\x27\x6a\xab\x73\x00\xa0\xa9\x90\xe8\x10\xad\x36\xfe\xc3\xaa\xf4\x88\x5f\x68\x52\xd9\x62\xf5\xae\x44\xa1\x0b\x2c\x48\xb9\x03\x00\x21\x91\xff\x72\xf5\xf1\xee\xc7\x9b\xd6\x67\x00\xa9\x84\x44\x65\xbe\x6d\xb6\x94\x86\xb3\x1b\x5f\x01\x52\xd4\x54\x31\x69\x7c\x14\xbc\x71\x80\xa5\x16\xa4\xce\xcb\xa8\xc1\x2c\xb0\x5e\x14\xa6\xd5\x1a\x40\xcc\xc1\x2c\x98\x06\x85\x52\xa1\x46\x6e\xbc\xe7\x5b\xc0\xe0\x94\x08\x07\x31\x7b\x44\x6a\xc6\x70\x83\xca\xc1\x80\x5e\x08\x9b\xa7\x40\x05\x5f\xa1\x32\xa0\x90\x8a\x8c\xb3\xaf\xdf\xb0\x35\x18\xe1\x27\xcd\x89\xc1\xca\xb4\x1b\x61\xdc\xa0\xe2\x24\x87\x15\xc9\x2d\x7e\x0f\x84\xa7\x50\x90\x35\x28\x74\xb3\x80\xe5\x0d\x3c\xaf\xa2\xc7\x70\x29\x14\x02\xe3\x73\x31\x85\x85\x31\x52\x4f\x27\x93\x8c\x99\x3a\xc8\xa9\x28\x0a\xcb\x99\x59\x4f\xa8\xe0\x46\xb1\x99\x35\x42\xe9\x49\x8a\x2b\xcc\x27\x9a\x65\x09\x51\x74\xc1\x0c\x52\x63\x15\x4e\x88\x64\x89\x5f\x3a\x37\xfe\xa4\x14\xe9\xff\x54\x75\x2c\xf4\x9b\xd6\x5a\xcd\xda\x39\x56\x1b\xc5\x78\xd6\xe8\xf0\xd1\x15\xf1\x80\x8b\x30\x60\x1a\x48\x35\xb4\xdc\xc5\xc6\xd0\xee\x93\xb3\xce\xf5\x87\x9b\x5b\xa8\xa7\xf6\xce\xd8\xb6\xbe\xb7\xfb\x66\xa0\xde\xb8\xc0\x19\x8c\xf1\x39\xaa\xd2\x89\x73\x25\x0a\x8f\x89\x3c\x95\x82\x71\xe3\x1b\x34\x67\xc8\xb7\xcd\xaf\xed\xac\x60\xc6\xf9\xfd\x6f\x8b\xda\x38\x5f\x8d\xe1\x82\x70\x2e\x0c\xcc\x10\xac\x4c\x89\xc1\x74\x0c\x1f\x39\x5c\x90\x02\xf3\x0b\xa2\xf1\xe4\x0e\x70\x96\xd6\x89\x33\x6c\x3f\x17\x34\x49\x6b\x5b\xb9\xb4\x5a\xa3\xa3\xe6\x99\x80\xbf\x5a\x54\x70\x23\x91\xb6\xce\x4d\x8a\x9a\x29\x17\xd9\x86\x18\x74\xe7\x61\x97\x55\x6a\xe9\x3e\xb5\x4e\xa8\xc2\xd4\xed\x96\xe4\xbf\x09\x55\x10\xb3\xdd\x1f\x1b\x0b\x91\x93\xdf\x1d\x7f\xcf\x64\x80\x4e\x44\xd8\xe2\x85\xe7\x32\x41\x00\xb4\x93\x1f\x9e\xc3\x08\x01\xdc\xd7\xe5\x89\x5a\x02\xc1\x5a\xcb\x2e\x6f\x74\xfb\xef\x20\xfe\x08\x18\xc6\xb3\xc3\x11\x3c\x12\x84\xad\xd9\xe5\x30\x3e\x09\xc0\xbe\x16\xcb\xf4\x74\x60\x37\xeb\xb4\x07\xef\xb0\x4f\x2d\xbb\x2c\x54\x4b\x9b\x8d\xb6\xa8\x62\x2f\x21\x05\x4c\xb9\x8d\xd3\xa9\x16\x67\x1d\xbf\x36\xa6\x65\x4e\xd6\x21\xda\x6a\xef\x3d\x68\x38\x27\x73\x86\x79\x1a\x9c\x07\x80\x19\x2c\x22\xdd\x7d\x16\x5b\x0a\xf2\x15\x15\x7c\xce\xb2\xb8\x5a\xaf\x45\x57\x4b\x17\xaa\x78\x31\x30\xc6\xa5\x8d\x58\xf2\x99\x68\x8f\x3a\x94\x13\x0e\x00\xf3\x45\xfe\x0b\xa1\xed\x39\x0d\x4d\x25\xa2\x14\x59\x07\x74\xea\x3a\xfb\x88\xd0\x73\xc4\xe4\x4e\x4c\x37\x44\xd2\x0e\xf1\x80\x4e\x19\xbc\x81\x4e\xd9\x55\x0c\xb4\x97\x17\xb0\x43\xa4\x73\x73\xc1\xba\x6b\x5c\x27\xda\x12\x3c\x32\xfb\x8e\xca\xbe\x7a\xe2\x34\x15\xc5\x89\x6a\x8a\xd3\x55\x15\xff\x95\xba\xa2\x47\x90\x87\x6b\x8b\x53\x56\x17\x27\xab\x2f\x4e\x56\x61\xbc\x7e\x8d\xd1\xc3\x99\xf1\x3a\xa3\x07\xb7\x86\x6b\x8d\xad\x68\xf8\xb4\xcd\x32\xf1\x72\x23\x68\x54\x31\xdf\x85\x0a\x33\xfa\xde\x34\x8e\x7c\x15\x4d\xf2\x24\x4d\xfd\xe3\x15\xc9\xaf\x7a\x16\x05\xa5\xc9\x66\x42\xe4\x48\x42\x2b\x83\xbe\x69\x2b\x63\x66\x0f\x7d\x42\xdf\x44\x59\x90\x47\x11\x49\x6e\x7d\x51\x18\x3f\x1a\x25\x9e\x26\x5d\x9e\xdb\x6c\xfb\xb0\xb8\xec\x91\x0a\xbb\x4a\x81\x82\xd0\x05\xe3\x78\xeb\x0e\xd6\x39\x07\x86\x60\xcf\x39\xf0\x9c\x03\xcf\x39\xb0\x21\xbd\x73\xe0\xe5\x86\x5f\xf6\xbf\xfe\x35\x94\x8f\xc8\x6f\xd5\x9f\x19\xeb\xa3\x89\x9f\x4a\x1b\xcd\x93\x7c\xfd\xe7\x3c\xa6\x90\x54\xd3\x38\x9e\xc8\x02\x37\x98\xb6\xe6\xde\x8b\x9f\x24\xc6\x71\xce\x14\xfe\x1a\x7e\x7e\xfb\x94\x8c\xde\x0f\x87\xf7\x3f\x24\x3f\x3f\xbc\x1d\x7e\x1e\xfb\x1f\xdf\x8d\xde\x8f\x9e\xea\xc6\xdb\xd1\x68\x38\xbc\xff\x74\xf9\xfb\xed\xd5\x87\x07\x36\x7a\xba\xe7\xb6\x58\x96\xad\xa7\xe1\x3d\x7e\x78\xe8\x09\x32\x1a\xbd\xff\x7f\x64\x51\x5f\x92\xcd\x7d\x2a\x61\xdc\x24\x42\x25\xe5\x4e\xa6\x60\x94\x0d\x9f\xed\xd4\x9d\x67\xe7\xae\x20\xb3\x40\xef\xea\xa2\x19\x75\xc7\x3a\x3e\x65\x7a\x79\xf6\xfc\x29\x3d\xaf\x48\xf4\xcd\xe7\x6c\xe0\x4a\x0e\x37\x30\x66\xdd\xcf\x1a\x1b\xd9\xfb\x26\xf8\xcc\xe7\xa8\xd8\x4b\x13\x80\x5e\x46\xc9\xb4\xd7\x4c\x5f\x05\x8f\x5f\x45\xfe\xcd\x2d\xed\x2f\xe9\xa9\xb4\xc1\x3e\x45\x8a\x60\x9f\x5e\x86\xc6\x9d\xe6\x0e\x10\x8c\x95\xa0\x39\x5b\x29\xfe\xda\x0f\x8f\x67\xf6\x52\xe7\x80\x8b\x44\x2e\x28\x89\x71\x7a\x8f\x07\xca\xec\x98\xe1\xd1\x90\xdb\x13\x6e\x3d\x42\x2d\x1e\x66\xb1\x10\x4b\xaa\x9d\xbd\x54\x18\x74\x0e\xda\xf9\xa8\x5d\xd5\x9d\x36\xb8\x47\x1b\xa1\x48\x86\xd5\x97\x7f\x02\x00\x00\xff\xff\xd5\x33\x77\x4d\x32\x23\x00\x00")

func cloudPharmerIo_cloudprovidersV1YamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudPharmerIo_cloudprovidersV1Yaml,
		"cloud.pharmer.io_cloudproviders.v1.yaml",
	)
}

func cloudPharmerIo_cloudprovidersV1Yaml() (*asset, error) {
	bytes, err := cloudPharmerIo_cloudprovidersV1YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloud.pharmer.io_cloudproviders.v1.yaml", size: 9010, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudPharmerIo_cloudprovidersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xcd\x8e\xdb\x36\x10\xbe\xfb\x29\x06\x68\x81\xd8\x4d\x65\x37\xe8\xa5\xf5\x25\x28\xb6\x49\x11\xa4\x41\x17\xd9\x6d\x2e\x9b\x14\x18\x8b\x63\x99\xb1\x44\xb2\x24\xe5\xc6\xc1\x3e\x7c\x41\x4a\xb2\x2d\x2f\x29\xf9\x67\x37\x7b\x59\x9e\x4c\x72\x38\x1c\xce\xcf\xf7\x51\x84\x51\xf1\x0f\xa4\x0d\x97\x62\x0a\xa8\x38\x7d\xb1\x24\x5c\xcf\x8c\x97\xbf\x98\x31\x97\x93\xd5\x8b\x19\x59\x7c\x31\x58\x72\xc1\xa6\x70\x51\x1a\x2b\x8b\xf7\x64\x64\xa9\x53\xfa\x9d\xe6\x5c\x70\xcb\xa5\x18\x14\x64\x91\xa1\xc5\xe9\x00\x20\xd5\x84\x6e\xf0\x9a\x17\x64\x2c\x16\x6a\x0a\xa2\xcc\xf3\x01\x40\x8e\x33\xca\x8d\x93\x01\x40\xa5\xc6\xcb\x72\x46\x5a\x90\x25\xbf\x95\xc0\x82\xa6\xa0\x16\xa8\x0b\xd2\x03\x80\xaa\x9f\xe6\xb2\x64\x4a\xcb\x15\x67\xa4\xcd\xd8\x77\xc7\xb5\xd0\x98\xcb\x81\x51\x94\x3a\x8d\x99\x96\xa5\xaa\xc5\x77\xe7\x2b\x3d\xf5\xa6\x29\x5a\xca\xa4\xe6\x4d\x3f\xd9\xd9\xce\xf5\x50\x29\x93\x4a\x46\xbe\x5b\x1f\xd9\x29\xbc\xac\xf7\xf7\xe3\x39\x37\xf6\xed\xdd\xb9\x3f\xb9\xb1\x7e\x5e\xe5\xa5\xc6\x7c\xdf\x72\x3f\x65\xb8\xc8\xca\x1c\xf5\xde\xe4\x00\x40\x69\x32\xa4\x57\xf4\xb7\x58\x0a\xf9\x9f\x78\xcd\x29\x67\x66\x0a\x73\xcc\x8d\xb3\xc6\xa4\x52\x91\xdb\xb0\x34\xd6\xcb\xaf\x30\xe7\xcc\xbb\xb9\x3a\x89\x54\x24\x7e\xbb\x7c\xf3\xe1\xe7\xab\x74\x41\x05\x56\x83\x4e\xad\x54\xa4\xed\xe6\xc0\x95\xe7\x37\x31\xdf\x8c\x01\x30\x32\xa9\xe6\xca\x6b\x84\x67\x4e\x55\x25\x03\xcc\x45\x99\x0c\xd8\x05\xc1\xaa\x1a\x23\x06\xc6\x6f\x03\x72\x0e\x76\xc1\x0d\x68\xf2\x07\x10\xd6\x9b\xb4\xa3\x16\x9c\x08\x0a\x90\xb3\xcf\x94\xda\x31\x5c\xb9\x43\x6a\x03\x66\x21\xcb\x9c\x41\x2a\xc5\x8a\xb4\x05\x4d\xa9\xcc\x04\xff\xba\xd1\x6c\xc0\x4a\xbf\x65\x8e\x96\x6a\xc7\x36\x8d\x0b\x4b\x5a\x60\xee\x9c\x50\xd2\x8f\x80\x82\x41\x81\x6b\xd0\xe4\xf6\x80\x52\xec\x68\xf3\x22\x66\x0c\xef\xa4\x26\xe0\x62\x2e\xa7\xb0\xb0\x56\x99\xe9\x64\x92\x71\xdb\x64\x79\x2a\x8b\xa2\x14\xdc\xae\x27\xa9\x14\x56\xf3\x59\x69\xa5\x36\x13\x46\x2b\xca\x27\x86\x67\x09\xea\x74\xc1\x2d\xa5\xb6\xd4\x34\x41\xc5\x13\x6f\xb8\xb0\xbe\x54\x0a\xf6\x9d\xae\x4b\xc2\x3c\xdb\xb1\xd4\xae\x5d\xcc\x8c\xd5\x5c\x64\x9b\x61\x9f\x55\x51\xbf\xbb\xbc\x02\x6e\x00\xeb\x65\x95\xfd\x5b\xf7\xba\x21\xe7\x95\xf7\xaf\xae\xae\xa1\xd9\xd4\x87\xa0\xed\x73\xef\xed\xed\x32\xb3\x75\xbc\x73\x14\x17\x73\xd2\x55\xe0\xe6\x5a\x16\x5e\x23\x09\xa6\x24\x17\xd6\x77\xd2\x9c\x93\x68\x3b\xdd\x94\xb3\x82\x5b\x17\xe9\x7f\x4b\x32\xd6\xc5\x67\x0c\x17\x28\x84\xb4\x30\x23\x28\x15\x43\x4b\x6c\x0c\x6f\x04\x5c\x60\x41\xf9\x05\x1a\x7a\x70\xb7\x3b\x0f\x9b\xc4\xb9\xb4\xdf\xf1\xbb\x10\xd5\x16\xac\xbc\xb5\x19\x6e\x10\x25\x18\xa1\x56\xc9\x5f\x29\x4a\x5b\xf5\xc1\xc8\x70\xed\x72\xd8\xa2\x25\x97\xf9\x77\xd1\x23\x5e\x97\x1e\xa0\x34\x31\x77\x3e\xcc\x5f\x4b\x5d\xa0\x6d\xcf\xc6\xd7\x41\xb4\xae\xc3\x79\x76\x8f\xf5\xbd\xc9\xb9\xb3\xea\x3c\xa8\xb2\xaa\xfd\x93\xeb\x3d\xa8\xf3\x1b\x63\x40\xd3\x82\x29\xd9\xb4\x7d\x4c\x08\xc7\xec\x24\x6c\x08\xfa\xc0\x87\xf4\x0c\x8c\x88\x28\x6d\x70\xe3\x34\xac\x08\x2a\x7d\x1c\xfc\x38\x28\x68\x21\x3c\x69\x2f\xdc\xc3\x95\xa6\xed\xe3\x4b\x30\xda\x17\x7b\x40\x70\x00\xd4\xec\xad\x08\xec\xd0\x85\x1e\xde\x02\x6e\x54\x8e\xeb\x30\xf4\x1c\xe4\x14\xd7\xe6\xd5\xdd\x25\xb2\x9c\x5b\x2a\xa2\x93\xfd\x26\x56\x8d\xc4\x2a\x95\x62\xce\xb3\x2e\xa1\x03\x4c\xad\x0d\x96\xba\xb8\x17\x45\x5c\xa8\x32\xea\xb7\xa3\x34\x7d\x36\x61\x14\x3f\x5a\x91\xbf\x72\xdf\x83\xa6\xce\x8c\xde\x15\x41\xad\x71\x1d\x94\x68\x6e\xbb\x27\x26\x96\x03\x13\x97\xf1\xa1\xe5\x49\x3b\x75\x83\x12\x55\x5a\x06\xa7\xd4\x5d\x82\x6e\x1b\x15\x3c\x77\x74\x6a\xfb\x59\x53\x73\xec\x9d\x5c\x8e\x14\x41\x77\xf2\x77\xf3\xfb\x99\x0c\x1f\x89\x49\x9b\xf7\x8f\xe5\xf8\x88\xd2\xe0\x0d\xff\x18\x96\x8f\xe8\x7d\xcc\xbb\xfe\xb6\xf5\xa4\x71\x8c\xeb\x1f\x8e\xed\x1f\x88\xef\x1f\x88\xf1\x1f\x9b\xf3\x7b\x03\xd8\xc5\xfb\xbd\x38\x19\xe3\xfe\xbd\xe8\xbf\xdd\x47\x90\x5e\xfa\x8f\xf8\xf2\x8e\xa2\x18\x32\xf7\x90\x2e\x89\x55\x07\x21\x23\x63\xfe\x19\x08\xf3\xcb\x83\xe8\xbb\x72\xd2\x4c\xca\x9c\x30\x6c\x11\x1c\x46\x39\x19\xb7\x9d\x90\x08\x87\xd1\x5b\x81\x9f\x65\x94\x96\x0e\xd3\xc0\xc5\x59\x1a\xba\xc8\xcd\x31\xd4\xf6\xa0\xc7\x67\x5d\x2f\x85\xdd\xa5\xec\x02\xd3\x05\x17\x74\xed\x4a\xe5\x89\xbb\x76\xdb\x13\x77\x3d\x71\xd7\x13\x77\xed\xb5\x56\xf4\xdf\x6d\xb1\xa3\xff\xa3\x75\x47\xf8\x44\x66\xaa\x9f\xf4\xd7\x67\xc1\x77\xaa\xca\x0e\x76\x13\xeb\xbf\xe6\xf1\xe9\xa4\xde\xc0\x61\x40\x16\xfc\x86\x68\xcb\xf5\x7c\x68\x29\xb4\x0e\x4b\xa6\xf0\xcf\xf0\xe3\xf3\xdb\x64\xf4\x72\x38\xbc\xf9\x29\xf9\xf5\xd3\xf3\xe1\xc7\xb1\xff\xf1\xc3\xe8\xe5\xe8\xb6\xe9\x3c\x1f\x8d\x86\xc3\x9b\xb7\xef\xfe\xb8\xbe\x7c\xf5\x89\x8f\x6e\x6f\x44\x59\x2c\xab\xde\xed\xf0\x86\x5e\x7d\x3a\x50\xc9\x68\xf4\xf2\xfb\xa8\x49\x5f\x92\xed\x17\x4d\xc2\x85\x4d\xa4\x4e\xaa\x53\x4c\xc1\xea\x32\x56\xb9\xcc\x55\xab\x0b\x4f\x04\x33\xe0\xc0\x9b\xc0\x6e\x76\x9d\x13\x64\xc6\xcd\xf2\x29\xca\xf7\x1d\x65\x8d\x1d\x6f\x27\x4f\x4e\x3d\xd1\xa9\x94\x85\x9e\x0d\xb6\xad\xe7\x15\xed\xa8\x47\x9d\xf8\x8b\x0d\x80\x59\x76\x00\xe3\x01\x7b\x7c\x95\xa2\xeb\x53\xe0\xdb\x1c\xa3\xef\x72\x9d\xaa\x32\x32\xa3\xb1\x88\xcc\x98\x65\x78\xcd\x7d\xdf\xc4\x23\x99\x10\x71\x5c\x8b\x88\xdf\xfb\xa5\xdd\xfc\x5b\xc9\x1c\x79\x99\xcf\x65\x8a\x71\x34\xee\x7d\xc6\xcb\x4e\x5d\xda\x91\x4c\x9d\x89\xd4\x9b\x44\x5d\x09\x14\x4f\x9e\xa4\x3e\xcb\xf9\x61\x0e\x2c\xd8\x1b\x5a\x35\x7f\xd2\x58\xbd\xd8\xf6\xfc\x81\x93\xfa\x7f\x12\x7e\x02\xc0\xff\x89\x80\xed\x80\x8b\xb1\x52\x63\x46\xf5\xc8\xff\x01\x00\x00\xff\xff\x4e\x25\x70\xb6\xf0\x21\x00\x00")

func cloudPharmerIo_cloudprovidersYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudPharmerIo_cloudprovidersYaml,
		"cloud.pharmer.io_cloudproviders.yaml",
	)
}

func cloudPharmerIo_cloudprovidersYaml() (*asset, error) {
	bytes, err := cloudPharmerIo_cloudprovidersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloud.pharmer.io_cloudproviders.yaml", size: 8688, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudPharmerIo_credentialformatsV1Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xcd\x8e\x1b\x37\x0c\xbe\xfb\x29\x08\xf4\x90\x4b\x3d\x46\xd0\x4b\x31\xb7\xc2\x6d\x81\xa0\x2d\x50\x64\x83\xdc\x69\x89\x1e\x33\xab\x91\x54\x92\x32\xea\x3e\x7d\x21\xcd\x78\xd7\x1e\x7b\xb7\xc9\x02\xd5\x4d\xfc\xd7\xf7\x91\x14\x66\xfe\x4c\xa2\x9c\x62\x0f\x98\x99\xfe\x36\x8a\xf5\xa6\xdd\xe3\x8f\xda\x71\xda\x1c\xdf\xaf\x1e\x39\xfa\x1e\xb6\x45\x2d\x8d\x1f\x49\x53\x11\x47\x3f\xd3\x9e\x23\x1b\xa7\xb8\x1a\xc9\xd0\xa3\x61\xbf\x02\x70\x42\x58\x85\x9f\x78\x24\x35\x1c\x73\x0f\xb1\x84\xb0\x02\x08\xb8\xa3\xa0\xd5\x06\x00\x73\xee\x1e\xcb\x8e\x24\x92\x51\xcb\x12\x71\xa4\x1e\xf2\x01\x65\x24\x59\x01\x4c\x77\x27\xe4\x29\x1a\x63\xd8\x27\x19\xd1\xb4\x73\x21\x15\xdf\xcd\x76\x1d\xa7\x95\x66\x72\x35\xe8\x20\xa9\xe4\x1e\x6e\xf4\x53\xa8\x39\xaf\x43\xa3\x21\x09\x9f\xef\xeb\x8b\x8c\xf5\x86\x39\xab\x4b\x9e\xda\x75\x7e\xf5\x53\x09\xbf\xb6\x12\x9a\x2a\xb0\xda\x6f\x77\xd5\xbf\xb3\x4e\x26\x39\x14\xc1\x70\xe7\x09\x4d\xab\x1c\x87\x12\x50\x6e\xf5\x2b\x00\x75\x29\x53\x0f\xdb\x50\xd4\x5a\x69\xc7\x89\xa0\x56\xf4\x7a\x86\xe6\xf8\x7e\x0a\xe4\x0e\x34\xe2\xf4\x1a\x80\x94\x29\xfe\xf4\xe7\x87\xcf\x3f\x3c\x5c\x89\x01\xb2\xa4\x4c\x62\x4f\x0f\x9f\xce\x05\xf7\x17\x52\x00\x4f\xea\x84\xb3\xb5\xa6\x78\x57\x03\x4e\x56\xe0\x2b\xe9\xa4\x60\x07\x3a\x17\x45\x7e\xae\x01\xd2\x1e\xec\xc0\x0a\x42\x59\x48\x29\x5a\x6b\x84\xab\xc0\x50\x8d\x30\x42\xda\x7d\x21\x67\x1d\x3c\x90\xd4\x30\xa0\x87\x54\x82\x07\x97\xe2\x91\xc4\x40\xc8\xa5\x21\xf2\x3f\x4f\xb1\x15\x2c\xb5\xa4\x01\x8d\x66\x80\x9f\x0f\x47\x23\x89\x18\xe0\x88\xa1\xd0\xf7\x80\xd1\xc3\x88\x27\x10\xaa\x59\xa0\xc4\x8b\x78\xcd\x44\x3b\xf8\x23\x09\x01\xc7\x7d\xea\xe1\x60\x96\xb5\xdf\x6c\x06\xb6\x73\xcf\xbb\x34\x8e\x25\xb2\x9d\x36\x2e\x45\x13\xde\x15\x4b\xa2\x1b\x4f\x47\x0a\x1b\xe5\x61\x8d\xe2\x0e\x6c\xe4\xac\x08\x6d\x30\xf3\xba\x95\x1e\xad\x0d\xce\xe8\xbf\x93\x79\x4a\xf4\xdd\x55\xad\x76\xaa\xc4\xaa\x09\xc7\xe1\x42\xd1\x3a\xed\x15\x06\x6a\xab\x01\x2b\xe0\xec\x3a\xbd\xe2\x19\xe8\x2a\xaa\xe8\x7c\xfc\xe5\xe1\x13\x9c\x53\x37\x32\x96\xe8\x37\xdc\x9f\x1d\xf5\x99\x82\x0a\x18\xc7\x3d\xc9\x44\xe2\x5e\xd2\xd8\x62\x52\xf4\x39\x71\xb4\x76\x71\x81\x29\x2e\xe1\xd7\xb2\x1b\xd9\x2a\xef\x7f\x15\x52\xab\x5c\x75\xb0\xc5\x18\x93\xc1\x8e\xa0\x64\x8f\x46\xbe\x83\x0f\x11\xb6\x38\x52\xd8\xa2\xd2\xff\x4e\x40\x45\x5a\xd7\x15\xd8\xaf\xa3\xe0\x72\x87\x2d\x8d\x27\xd4\x2e\x14\xe7\x9d\xf3\x02\x5f\xcb\x9d\xf0\x90\xc9\x5d\x8d\x8e\x27\x65\xa9\xcd\x6d\x68\x54\x47\xe2\xee\x92\x39\x9f\xfb\xb3\xdb\xb2\xb2\xe6\x80\xa7\xc9\x67\xa9\x7c\xf1\xa9\xf5\xec\x99\x82\xbf\x89\x07\xc0\x46\xe3\x1d\xf1\x6b\x45\x4c\x87\xe2\xd1\xa5\xb8\xe7\xe1\xbe\xfa\xd5\x62\xe6\x92\x92\x8c\x6f\x76\xe6\x98\xcb\x1d\x04\xbe\xd2\xfb\x8b\x2e\x37\xe0\x37\x38\xb7\x7f\xed\x8d\xde\x2f\xf4\xd7\xa5\x12\x45\xf0\xb4\xd0\x65\x49\x47\xf6\x24\xdf\x40\x79\x1d\xce\xda\x73\xd7\x2e\xeb\xeb\x16\x5a\xe8\xa6\x26\x59\x08\xcf\xb9\xff\x7b\x4e\x6e\x84\x5a\x57\x8d\xef\xc1\xa4\x4c\x3f\xac\x5a\x12\x1c\x68\x96\xfc\x1b\x00\x00\xff\xff\x37\xac\x76\x33\x8a\x08\x00\x00")

func cloudPharmerIo_credentialformatsV1YamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudPharmerIo_credentialformatsV1Yaml,
		"cloud.pharmer.io_credentialformats.v1.yaml",
	)
}

func cloudPharmerIo_credentialformatsV1Yaml() (*asset, error) {
	bytes, err := cloudPharmerIo_credentialformatsV1YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloud.pharmer.io_credentialformats.v1.yaml", size: 2186, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudPharmerIo_credentialformatsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\xcd\x8e\x1b\x37\x0c\xbe\xfb\x29\x08\xf4\x90\x4b\x3d\xc6\xa2\x97\x62\x6e\x85\xdb\x00\x41\x5b\xa0\xc8\xa6\xb9\xd3\x12\x6d\x33\xab\x91\x54\x92\x9a\xd6\x7d\xfa\x42\x9a\xb1\xd7\xb3\xeb\x4d\x17\x0b\x64\x6e\xfc\x11\x7f\x3e\x7e\x94\x06\x33\x7f\x26\x51\x4e\xb1\x07\xcc\x4c\xff\x18\xc5\x2a\x69\xf7\xf0\xa3\x76\x9c\x36\xe3\xdd\x8e\x0c\xef\x56\x0f\x1c\x7d\x0f\xdb\xa2\x96\x86\x8f\xa4\xa9\x88\xa3\x9f\x69\xcf\x91\x8d\x53\x5c\x0d\x64\xe8\xd1\xb0\x5f\x01\x38\x21\xac\xca\x4f\x3c\x90\x1a\x0e\xb9\x87\x58\x42\x58\x01\x04\xdc\x51\xd0\xea\x03\x80\x39\x77\x0f\x65\x47\x12\xc9\xa8\xa5\x8a\x38\x50\x0f\xf9\x88\x32\x90\xac\x00\x26\xd9\x09\x79\x8a\xc6\x18\xf6\x49\x06\x34\xed\x5c\x48\xc5\x77\xb3\x5f\xc7\x69\xa5\x99\x5c\x0d\x7a\x90\x54\x72\x0f\xcf\xec\x53\xa8\x39\xaf\x43\xa3\x43\x12\x3e\xcb\xeb\xab\x8c\x55\xc2\x9c\xd5\x25\x4f\x4d\x9c\xbb\xbe\x94\xf0\xbe\x95\xd0\x4c\x81\xd5\x7e\xbd\x69\xfe\x8d\x75\x72\xc9\xa1\x08\x86\x1b\x2d\x34\xab\x72\x3c\x94\x80\xf2\xdc\xbe\x02\xc8\x42\x4a\x32\xd2\x9f\xf1\x21\xa6\xbf\xe3\x7b\xa6\xe0\xb5\x87\x3d\x06\xad\x95\xa9\x4b\x99\x7a\xd8\x86\xa2\xd6\x2a\x1f\x31\xb0\x6f\xa8\x4f\x5d\xa5\x4c\xf1\xa7\x3f\x3e\x7c\xfe\xe1\xde\x1d\x69\xc0\x49\x59\xc3\xa6\x4c\x62\x97\xe6\xa7\x41\x5c\x28\x70\xd1\x01\x78\x52\x27\x9c\x5b\x44\x78\x57\x43\x4d\x3e\xe0\xeb\xd0\x49\xc1\x8e\x04\xe3\xa4\x23\x0f\xda\xd2\x40\xda\x83\x1d\x59\x41\xa8\x35\x10\xad\x95\x74\x15\x16\xaa\x0b\x46\x48\xbb\x2f\xe4\xac\x83\xfb\xda\xa4\x28\xe8\x31\x95\xe0\xc1\xa5\x38\x92\x18\x08\xb9\x74\x88\xfc\xef\x25\xb2\x82\xa5\x96\x32\xa0\xd1\x0c\xef\xf9\xe3\x68\x24\x11\x43\x05\xa1\xd0\xf7\x80\xd1\xc3\x80\x27\x10\xaa\x39\xa0\xc4\xab\x68\xcd\x45\x3b\xf8\x3d\x09\x01\xc7\x7d\xea\xe1\x68\x96\xb5\xdf\x6c\x0e\x6c\x67\xd2\xbb\x34\x0c\x25\xb2\x9d\x36\x2e\x45\x13\xde\x15\x4b\xa2\x1b\x4f\x23\x85\x8d\xf2\x61\x8d\xe2\x8e\x6c\xe4\xac\x08\x6d\x30\xf3\xba\x15\x1e\xad\x6d\xce\xe0\xbf\x93\x79\x43\xf4\xdd\x55\xa5\x76\xaa\x33\x53\x13\x8e\x87\x8b\xba\x31\xec\x45\xdc\x2b\xc1\x80\x15\x70\x3e\x36\xd5\xff\x08\x6f\x55\x55\x54\x3e\xfe\x72\xff\x09\xce\x49\xdb\x08\x96\x98\x37\xb4\x1f\x8f\xe9\x23\xf0\x15\x28\x8e\x7b\x92\x69\x70\x7b\x49\x43\x8b\x48\xd1\xe7\xc4\xd1\x9a\xe0\x02\x53\x5c\x82\xae\x65\x37\xb0\xd5\x49\xff\x55\x48\xad\xce\xa7\x83\x2d\xc6\x98\x0c\x76\x04\x25\x7b\x34\xf2\x1d\x7c\x88\xb0\xc5\x81\xc2\x16\x95\xbe\x39\xec\x15\x61\x5d\x57\x48\xff\x1f\xf8\xeb\x1b\x6b\xe9\x38\xa1\x75\x51\x9f\x6f\x97\x9b\x13\x7a\xba\xfb\xf7\x99\xdc\x62\x45\x3c\x29\x4b\xa5\xb1\xa1\x51\x25\xff\xcd\xcb\xe4\xe5\xed\x6c\x19\x59\x73\xc0\xd3\xe4\xbf\x34\xbd\xd0\x5c\xfd\xf6\xd3\x9d\xf1\xc4\x9d\x8d\x86\x67\xca\x97\x53\x4f\x1f\xc5\xd1\xa5\xb8\xe7\xc3\x2d\xe3\x57\x4a\x98\x0b\x49\x32\xbc\xe9\x20\xc7\x5c\x9e\xf5\xfb\xaa\x93\x5f\x74\x79\x9b\xbd\xfa\x60\x7b\xa1\xde\x70\xf2\x26\x73\xae\x4d\x28\x82\xa7\x85\x25\x4b\x1a\xd9\x93\xbc\x72\xa0\x75\xd1\x2a\x93\xae\xdd\xd7\x4b\x6a\x2c\x2c\xd3\xf8\x17\xaa\x73\xc6\xaf\x33\xfe\x89\x6a\x3c\xff\x1e\x8c\x77\x8f\x52\x63\xc9\x7a\x7e\xa1\x9b\x01\xa0\xbd\x57\xbe\x07\x93\x32\x3d\x9e\x6a\x49\xf0\x40\xb3\xe6\xbf\x00\x00\x00\xff\xff\x96\x37\xdd\xf9\x6a\x08\x00\x00")

func cloudPharmerIo_credentialformatsYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudPharmerIo_credentialformatsYaml,
		"cloud.pharmer.io_credentialformats.yaml",
	)
}

func cloudPharmerIo_credentialformatsYaml() (*asset, error) {
	bytes, err := cloudPharmerIo_credentialformatsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloud.pharmer.io_credentialformats.yaml", size: 2154, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudPharmerIo_credentialsV1Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x31\x6f\x2b\x37\x0c\xde\xfd\x2b\x08\x74\x78\x4b\x7d\xc6\x43\x97\xe2\xb6\xc2\xed\x10\xb4\x05\x82\x38\xc8\x4e\x4b\xf4\x99\x8d\x4e\x52\x49\xca\x68\xfa\xeb\x0b\xe9\xce\xf1\xd9\x6e\xd2\x2e\x4f\x9b\x48\xea\x23\xf9\x7d\x14\x31\xf3\x0b\x89\x72\x8a\x3d\x60\x66\xfa\xcb\x28\xd6\x9b\x76\xaf\x3f\x6a\xc7\x69\x73\xfa\xba\x7a\xe5\xe8\x7b\xd8\x16\xb5\x34\x3e\x91\xa6\x22\x8e\x7e\xa6\x03\x47\x36\x4e\x71\x35\x92\xa1\x47\xc3\x7e\x05\xe0\x84\xb0\x1a\x9f\x79\x24\x35\x1c\x73\x0f\xb1\x84\xb0\x02\x08\xb8\xa7\xa0\x35\x06\x00\x73\xee\x5e\xcb\x9e\x24\x92\x51\xcb\x12\x71\xa4\x1e\xf2\x11\x65\x24\x59\x01\x4c\x77\x27\xe4\x29\x1a\x63\xd0\xce\x85\x54\x7c\x37\x47\x74\x9c\x56\x9a\xc9\x55\xb8\x41\x52\xc9\x3d\xdc\xf9\x27\x90\x39\xa3\x43\xa3\x21\x09\x9f\xef\xeb\x45\xae\x7a\xc3\x9c\xd5\x25\x4f\xed\x3a\xf7\xfb\x9e\xbc\x19\x03\xab\xfd\x7a\xe3\xf8\x8d\xd5\x9a\x33\x87\x22\x18\xae\x0a\x6e\x76\xe5\x38\x94\x80\xb2\xf4\xac\x00\xd4\xa5\x4c\x3d\x6c\x43\x51\x6b\x25\x9c\x26\x09\x5a\x71\xeb\xb9\xf9\xd3\xd7\x09\xc2\x1d\x69\xc4\xa9\x6a\x80\x94\x29\xfe\xf4\xf8\xf0\xf2\xc3\xee\xca\x0c\x90\x25\x65\x12\x7b\x6f\x70\x3a\x0b\x75\x17\x56\x00\x4f\xea\x84\xb3\x35\xd9\xbf\x54\xc0\x29\x0a\x7c\x95\x95\x14\xec\x48\xe7\xa2\xc8\xcf\x35\x40\x3a\x80\x1d\x59\x41\x28\x0b\x29\x45\x6b\x52\x5f\x01\x43\x0d\xc2\x08\x69\xff\x07\x39\xeb\x60\x47\x52\x61\x40\x8f\xa9\x04\x0f\x2e\xc5\x13\x89\x81\x90\x4b\x43\xe4\xbf\xdf\xb1\x15\x2c\xb5\xa4\x01\x8d\x66\x52\x2f\x87\xa3\x91\x44\x0c\x70\xc2\x50\xe8\x7b\xc0\xe8\x61\xc4\x37\x10\xaa\x59\xa0\xc4\x05\x5e\x0b\xd1\x0e\x7e\x4f\x42\xc0\xf1\x90\x7a\x38\x9a\x65\xed\x37\x9b\x81\xed\x3c\xd5\x2e\x8d\x63\x89\x6c\x6f\x1b\x97\xa2\x09\xef\x8b\x25\xd1\x8d\xa7\x13\x85\x8d\xf2\xb0\x46\x71\x47\x36\x72\x56\x84\x36\x98\x79\xdd\x4a\x8f\xd6\xbe\xc6\xe8\xbf\x93\xf9\x1f\xe8\x97\xab\x5a\xed\xad\x0a\xab\x26\x1c\x87\x85\xa3\x4d\xd4\x27\x0a\xd4\xc1\x02\x56\xc0\xf9\xe9\xd4\xc5\x85\xe8\x6a\xaa\xec\x3c\xfd\xb2\x7b\x86\x73\xea\x26\xc6\x2d\xfb\x8d\xf7\xcb\x43\xbd\x48\x50\x09\xe3\x78\x20\x99\x44\x3c\x48\x1a\x1b\x26\x45\x9f\x13\x47\x6b\x17\x17\x98\xe2\x2d\xfd\x5a\xf6\x23\x5b\xd5\xfd\xcf\x42\x6a\x55\xab\x0e\xb6\x18\x63\x32\xd8\x13\x94\xec\xd1\xc8\x77\xf0\x10\x61\x8b\x23\x85\x2d\x2a\x7d\x73\x01\x2a\xd3\xba\xae\xc4\xfe\x3f\x09\x96\x5b\xea\x36\x78\x62\x6d\xe1\x38\xef\x96\x0f\xf4\xba\x6c\x80\x5d\x26\x77\xf5\x69\x3c\x29\x4b\x1d\x6b\x43\xa3\xfa\x19\x6e\xd6\xc8\xf9\xfc\xfb\x7f\x6d\x99\xee\x8a\xac\x07\xbd\x6f\xdb\x16\xc3\xe3\x87\x2f\x3f\xe9\xfe\xd3\x6e\xe7\x7a\x4e\xec\x49\xee\x31\x3f\x44\xac\xe3\x50\x7b\xbd\x7e\xb2\x6e\x0d\xdc\x98\xce\xe8\xff\xcd\xfd\x9d\x51\xeb\xf8\xfa\x1e\x4c\xca\xb4\x9d\xd5\x92\xe0\x40\xb3\xe5\x9f\x00\x00\x00\xff\xff\x04\x3d\x89\xc6\xc0\x06\x00\x00")

func cloudPharmerIo_credentialsV1YamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudPharmerIo_credentialsV1Yaml,
		"cloud.pharmer.io_credentials.v1.yaml",
	)
}

func cloudPharmerIo_credentialsV1Yaml() (*asset, error) {
	bytes, err := cloudPharmerIo_credentialsV1YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloud.pharmer.io_credentials.v1.yaml", size: 1728, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudPharmerIo_credentialsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x4d\xaf\x63\x35\x0c\xdd\xf7\x57\x58\x62\x31\x1b\x7a\xab\x27\x36\xe8\xee\xd0\x03\xa4\x11\x20\x8d\xe6\x0d\xb3\x77\x13\xb7\x35\x2f\xd7\x09\xb6\x53\x78\xfc\x7a\x94\xdc\xdb\x4f\xe8\xb0\xa2\x3b\x9f\xf8\x1e\x1f\x1f\x27\x2e\x16\xfe\x4c\x6a\x9c\x65\x04\x2c\x4c\x7f\x3a\x49\x8b\x6c\x78\xfd\xd6\x06\xce\x9b\xe3\xd3\x96\x1c\x9f\x56\xaf\x2c\x71\x84\xe7\x6a\x9e\xa7\x8f\x64\xb9\x6a\xa0\xef\x69\xc7\xc2\xce\x59\x56\x13\x39\x46\x74\x1c\x57\x00\x41\x09\x1b\xf8\x89\x27\x32\xc7\xa9\x8c\x20\x35\xa5\x15\x40\xc2\x2d\x25\x6b\x39\x00\x58\xca\xf0\x5a\xb7\xa4\x42\x4e\xbd\x94\xe0\x44\x23\x94\x03\xea\x44\xba\x02\x98\xe3\xa0\x14\x49\x9c\x31\xd9\x10\x52\xae\x71\x58\x32\x06\xce\x2b\x2b\x14\x1a\xdd\x5e\x73\x2d\x23\xfc\xe3\x7c\x26\x59\x2a\x06\x74\xda\x67\xe5\x53\xbc\xbe\xaa\xd5\x22\x2c\xc5\x42\x8e\xd4\xc3\xa5\xdf\x73\xf1\x0e\x26\x36\xff\xe9\xee\xe0\x67\x36\xef\x87\x25\x55\xc5\x74\x23\xb8\xe3\xc6\xb2\xaf\x09\xf5\xfa\x64\x05\x50\x94\x8c\xf4\x48\xbf\xca\xab\xe4\x3f\xe4\x47\xa6\x14\x6d\x84\x1d\x26\x6b\x0a\x2c\xe4\x42\x23\x3c\xa7\x6a\xde\x15\x1e\x31\x71\xec\xbe\xce\xea\x73\x21\xf9\xee\xc3\xfb\xcf\xdf\xbc\x84\x03\x4d\x38\x83\x8d\x36\x17\x52\x3f\x37\x39\x5b\x7d\x1e\xf2\x19\x03\x88\x64\x41\xb9\x74\x46\x78\xd7\xa8\xe6\x1c\x88\x6d\xac\x64\xe0\x07\x82\xe3\x8c\x51\x04\xeb\x65\x20\xef\xc0\x0f\x6c\xa0\xd4\x1b\x10\xef\x92\xae\x68\xa1\xa5\xa0\x40\xde\xfe\x46\xc1\x07\x78\x69\x4d\xaa\x81\x1d\x72\x4d\x11\x42\x96\x23\xa9\x83\x52\xc8\x7b\xe1\xbf\xce\xcc\x06\x9e\x7b\xc9\x84\x4e\x8b\xa5\xa7\x1f\x8b\x93\x0a\xa6\x66\x42\xa5\xaf\x01\x25\xc2\x84\x6f\xa0\xd4\x6a\x40\x95\x2b\xb6\x9e\x62\x03\xfc\x92\x95\x80\x65\x97\x47\x38\xb8\x17\x1b\x37\x9b\x3d\xfb\xe9\x5a\x87\x3c\x4d\x55\xd8\xdf\x36\x21\x8b\x2b\x6f\xab\x67\xb5\x4d\xa4\x23\xa5\x8d\xf1\x7e\x8d\x1a\x0e\xec\x14\xbc\x2a\x6d\xb0\xf0\xba\x0b\x17\xef\x6f\x63\x8a\x5f\xe9\xf2\x06\xec\xdd\x95\x52\x7f\x6b\x33\x33\x57\x96\xfd\x19\xee\x37\xe9\xa1\xef\xed\x3a\x01\x1b\xe0\xf2\xd9\xac\xff\x62\x6f\x83\x9a\x2b\x1f\x7f\x78\xf9\x04\xa7\xa2\x7d\x04\xb7\x9e\x77\xb7\x2f\x9f\xd9\xc5\xf8\x66\x14\xcb\x8e\x74\x1e\xdc\x4e\xf3\xd4\x19\x49\x62\xc9\x2c\xde\x83\x90\x98\xe4\xd6\x74\xab\xdb\x89\xbd\x4d\xfa\xf7\x4a\xe6\x6d\x3e\x03\x3c\xa3\x48\x76\xd8\x12\xd4\x12\xd1\x29\x0e\xf0\x5e\xe0\x19\x27\x4a\xcf\x68\xf4\xbf\xdb\xde\x1c\xb6\x75\xb3\xf4\xbf\x8d\xbf\xde\x49\xb7\x89\xb3\x5b\x67\xf8\xb4\x45\xfe\x75\x42\x97\x97\xfe\x52\x28\xdc\x3c\x8e\x48\xc6\xda\x2e\xb0\xa3\x53\xbb\xf6\x77\xeb\xe2\xf1\x8b\xec\x55\xee\xa4\xf5\x97\x1a\x63\xdf\xa7\x98\x3e\x3c\xf8\xea\x61\xb7\x5f\xe8\x6f\x51\x71\xe4\x48\x7a\xcf\xf6\x80\xab\x0d\xbd\xf5\x76\x9d\xbe\xee\x92\x6f\x80\x13\xeb\x97\x1d\xbe\x83\x8e\xa7\x3f\x9c\xe3\xd3\x25\xea\x6d\xae\x97\x9d\xdf\x0f\x00\xfa\x7e\x8c\x23\xb8\xd6\x79\x29\x9b\x67\xc5\x3d\x2d\xc8\xdf\x01\x00\x00\xff\xff\x50\xe3\xab\x7d\xbc\x06\x00\x00")

func cloudPharmerIo_credentialsYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudPharmerIo_credentialsYaml,
		"cloud.pharmer.io_credentials.yaml",
	)
}

func cloudPharmerIo_credentialsYaml() (*asset, error) {
	bytes, err := cloudPharmerIo_credentialsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloud.pharmer.io_credentials.yaml", size: 1724, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudPharmerIo_kubernetesversionsV1Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xcd\x8e\x1b\x37\x0c\xbe\xfb\x29\x08\xf4\x90\x4b\x3d\x46\xd0\x4b\x31\xb7\xc2\xed\x21\x48\x0b\x04\x71\x90\x3b\x2d\xd1\x63\x66\x35\x92\x4a\x52\x46\xb7\x4f\x5f\x48\x33\x5e\x8f\x7f\x36\xed\x1e\x3a\x37\xf1\x9f\xdf\x47\x72\x30\xf3\x57\x12\xe5\x14\x7b\xc0\xcc\xf4\x97\x51\xac\x2f\xed\x9e\x7e\xd6\x8e\xd3\xe6\xf4\x7e\xf5\xc4\xd1\xf7\xb0\x2d\x6a\x69\xfc\x4c\x9a\x8a\x38\xfa\x95\x0e\x1c\xd9\x38\xc5\xd5\x48\x86\x1e\x0d\xfb\x15\x80\x13\xc2\x2a\xfc\xc2\x23\xa9\xe1\x98\x7b\x88\x25\x84\x15\x40\xc0\x3d\x05\xad\x36\x00\x98\x73\xf7\x54\xf6\x24\x91\x8c\x5a\x96\x88\x23\xf5\x90\x8f\x28\x23\xc9\x0a\x60\x7a\x5f\x6c\x4e\x53\x8d\xda\xb9\x90\x8a\xef\x66\xc3\x8e\xd3\x4a\x33\xb9\x1a\x75\x90\x54\x72\x0f\x77\xfa\x29\xd6\x9c\xd8\xa1\xd1\x90\x84\xcf\xef\xf5\x22\x65\x7d\x61\xce\xea\x92\xa7\xf6\x9c\xda\xfe\xf8\x52\xc3\x8c\x53\xd3\x05\x56\xfb\xf8\x58\xff\x3b\xab\x35\x9b\x1c\x8a\x60\x78\xd4\x45\x53\x2b\xc7\xa1\x04\x94\x07\x06\x2b\x00\x75\x29\x53\x0f\xdb\x50\xd4\x5a\x79\x67\xdf\x5a\xf8\x7a\xc6\xe7\xf4\x7e\x8a\xe4\x8e\x34\xe2\xd4\x11\x40\xca\x14\x7f\xf9\xf4\xe1\xeb\x4f\xbb\x2b\x31\x40\x96\x94\x49\xec\xa5\xf9\xe9\x5b\x0c\xc0\x42\x0a\xe0\x49\x9d\x70\xb6\x36\x19\xef\x6a\xc0\xc9\x0a\x7c\x65\x9e\x14\xec\x48\xe7\xa2\xc8\xcf\x35\x40\x3a\x80\x1d\x59\x41\x28\x0b\x29\x45\x6b\xd3\x70\x15\x18\xaa\x11\x46\x48\xfb\x6f\xe4\xac\x83\x1d\x49\x0d\x03\x7a\x4c\x25\x78\x70\x29\x9e\x48\x0c\x84\x5c\x1a\x22\xff\xfd\x12\x5b\xc1\x52\x4b\x1a\xd0\x68\x86\xf8\xf2\x71\x34\x92\x88\x01\x4e\x18\x0a\xfd\x08\x18\x3d\x8c\xf8\x0c\x42\x35\x0b\x94\xb8\x88\xd7\x4c\xb4\x83\x3f\x92\x10\x70\x3c\xa4\x1e\x8e\x66\x59\xfb\xcd\x66\x60\x3b\x0f\xbe\x4b\xe3\x58\x22\xdb\xf3\xc6\xa5\x68\xc2\xfb\x62\x49\x74\xe3\xe9\x44\x61\xa3\x3c\xac\x51\xdc\x91\x8d\x9c\x15\xa1\x0d\x66\x5e\xb7\xd2\xa3\xb5\x39\x1d\xfd\x0f\x32\xaf\x8a\xbe\xbb\xaa\xd5\x9e\x2b\xb1\x6a\xc2\x71\x58\x28\xda\xb4\x7d\x87\x81\x3a\x6d\xc0\x0a\x38\xbb\x4e\x5d\x5c\x80\xae\xa2\x8a\xce\xe7\xdf\x76\x5f\xe0\x9c\xba\x91\x71\x8b\x7e\xc3\xfd\xe2\xa8\x17\x0a\x2a\x60\x1c\x0f\x24\x13\x89\x07\x49\x63\x8b\x49\xd1\xe7\xc4\xd1\xda\xc3\x05\xa6\x78\x0b\xbf\x96\xfd\xc8\x56\x79\xff\xb3\x90\x5a\xe5\xaa\x83\x2d\xc6\x98\x0c\xf6\x04\x25\x7b\x34\xf2\x1d\x7c\x88\xb0\xc5\x91\xc2\x16\x95\xfe\x77\x02\x2a\xd2\xba\xae\xc0\xfe\x37\x0a\x96\x87\xec\xd6\x78\x42\x6d\xa1\x38\xdf\x9d\x57\xf8\xba\x3b\x0b\xbb\x4c\xee\x6a\x77\x3c\x29\x4b\x9d\x6e\x43\xa3\xba\x13\x8f\x2f\xcd\xf9\x7b\xbc\xbd\xf5\xa3\x78\xba\x93\x01\xa0\xf7\xed\x3c\x63\xf8\xf4\xaa\xe7\xa5\xbd\x7d\x4a\x81\xf0\x76\x51\x5f\x6d\xbe\x7e\x03\xdb\xc3\xc3\xf1\x1d\x80\x1b\xc8\xf8\x2d\xc9\xdb\x3c\x38\xbe\xc9\xa3\xce\x60\x45\xf6\xda\x65\xbd\x28\xf8\xdf\xf9\xbd\x13\x6a\x5d\x11\xdf\x83\x49\x99\xfe\x0e\x6a\x49\x70\xa0\x59\xf2\x4f\x00\x00\x00\xff\xff\x9c\xeb\xf4\x09\x47\x07\x00\x00")

func cloudPharmerIo_kubernetesversionsV1YamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudPharmerIo_kubernetesversionsV1Yaml,
		"cloud.pharmer.io_kubernetesversions.v1.yaml",
	)
}

func cloudPharmerIo_kubernetesversionsV1Yaml() (*asset, error) {
	bytes, err := cloudPharmerIo_kubernetesversionsV1YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloud.pharmer.io_kubernetesversions.v1.yaml", size: 1863, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudPharmerIo_kubernetesversionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xcd\x8e\x1b\x37\x0c\xbe\xfb\x29\x08\xf4\x90\x4b\x3d\xc6\xa2\x97\x62\x6e\x85\xdb\x02\x41\x5a\x20\xc8\xa6\xb9\x73\x24\x7a\xcc\xac\x86\x52\x45\x6a\xda\xed\xd3\x17\xd2\x8c\x7f\x76\x63\xb7\xb9\x44\x37\x92\x9f\xf8\xf3\x91\xa2\x30\xf1\x27\xca\xca\x51\x7a\xc0\xc4\xf4\xb7\x91\x54\x49\xbb\xa7\x1f\xb5\xe3\xb8\x9b\x1f\x06\x32\x7c\xd8\x3c\xb1\xf8\x1e\xf6\x45\x2d\x4e\x1f\x48\x63\xc9\x8e\x7e\xa6\x03\x0b\x1b\x47\xd9\x4c\x64\xe8\xd1\xb0\xdf\x00\xb8\x4c\x58\x95\x1f\x79\x22\x35\x9c\x52\x0f\x52\x42\xd8\x00\x04\x1c\x28\x68\xc5\x00\x60\x4a\xdd\x53\x19\x28\x0b\x19\xb5\x50\x82\x13\xf5\x90\x8e\x98\x27\xca\x1b\x80\x45\xbe\x60\xe6\x25\x51\xed\x5c\x88\xc5\x77\x2b\xb0\xe3\xb8\xd1\x44\xae\x7a\x1d\x73\x2c\xa9\x87\x2f\xec\x8b\xaf\x35\xb0\x43\xa3\x31\x66\x3e\xc9\xdb\xab\x90\x55\xc2\x94\xd4\x45\x4f\x4d\x5c\xca\x7e\x77\xce\x61\x25\xab\xd9\x02\xab\xbd\xbb\x6d\xff\x8d\xd5\x1a\x26\x85\x92\x31\xdc\xaa\xa2\x99\x95\x65\x2c\x01\xf3\x0d\xc0\x06\x20\x65\x52\xca\x33\xfd\x21\x4f\x12\xff\x92\x5f\x99\x82\xd7\x1e\x0e\x18\xb4\x66\xa7\x2e\x26\xea\x61\x1f\x8a\x5a\xcb\x7e\xc6\xc0\xbe\x51\xbf\x54\x16\x13\xc9\x4f\xef\xdf\x7e\xfa\xe1\xd1\x1d\x69\xc2\x45\x59\xdd\xc6\x44\xd9\xce\x04\x2c\xdd\x38\xcf\xc1\x59\x07\xe0\x49\x5d\xe6\xd4\x3c\xc2\x9b\xea\x6a\xc1\x80\xaf\x9d\x27\x05\x3b\x12\xac\xf9\x92\x07\x6d\x61\x20\x1e\xc0\x8e\xac\x90\xa9\x15\x20\xd6\x52\xba\x72\x0b\x15\x82\x02\x71\xf8\x4c\xce\x3a\x78\xac\x45\x66\x05\x3d\xc6\x12\x3c\xb8\x28\x33\x65\x83\x4c\x2e\x8e\xc2\xff\x9c\x3d\x2b\x58\x6c\x21\x03\x1a\xad\x04\x9f\x0e\x8b\x51\x16\x0c\x95\x84\x42\xdf\x03\x8a\x87\x09\x9f\x21\x53\x8d\x01\x45\xae\xbc\x35\x88\x76\xf0\x7b\xcc\x04\x2c\x87\xd8\xc3\xd1\x2c\x69\xbf\xdb\x8d\x6c\xa7\xc9\x77\x71\x9a\x8a\xb0\x3d\xef\x5c\x14\xcb\x3c\x14\x8b\x59\x77\x9e\x66\x0a\x3b\xe5\x71\x8b\xd9\x1d\xd9\xc8\x59\xc9\xb4\xc3\xc4\xdb\x96\xb8\x58\x9b\xd1\xc9\x7f\x97\xd7\x67\xa2\x6f\xae\x32\xb5\xe7\xda\x33\xb5\xcc\x32\x9e\xd5\x6d\xca\xee\xf2\x5e\x67\x0c\x58\x01\xd7\x6b\x4b\xfe\x17\x7a\xab\xaa\xb2\xf2\xe1\x97\xc7\x8f\x70\x0a\xda\x5a\xf0\x92\xf3\xc6\xf6\xe5\x9a\x5e\x88\xaf\x44\xb1\x1c\x28\x2f\x8d\x3b\xe4\x38\x35\x8f\x24\x3e\x45\x16\x6b\x82\x0b\x4c\xf2\x92\x74\x2d\xc3\xc4\x56\x3b\xfd\x67\x21\xb5\xda\x9f\x0e\xf6\x28\x12\x0d\x06\x82\x92\x3c\x1a\xf9\x0e\xde\x0a\xec\x71\xa2\xb0\x47\xa5\x6f\x4e\x7b\x65\x58\xb7\x95\xd2\xff\x27\xfe\x7a\x6d\xbd\x04\x2e\x6c\x9d\xd5\xa7\x0d\x73\xb3\x43\x5f\x3c\xff\xc7\x44\xee\xc5\x1b\xf1\xa4\x9c\xeb\x1c\x1b\x1a\xd5\xe9\xbf\xbd\x51\xee\xbf\xcf\x7a\x48\xe6\x57\x1a\x00\xf4\xbe\x2d\x60\x0c\xef\xef\xdc\xba\x94\x34\xc4\x18\x08\x65\x73\xcb\xf6\xaa\xdc\x7a\x46\xb6\x1b\x2b\xe1\x2e\x95\x8d\x4e\xfc\x1c\xf3\xd7\xa3\x59\xbe\x1a\x5d\x27\xac\x32\x78\x0d\xdf\x5e\xa5\xf8\xdf\xfd\x7b\xa5\x9a\x4f\x3f\xde\xfc\x70\x91\x1a\x6d\xdb\xf5\xd3\x69\x06\x80\xb6\x7d\x7d\x0f\x96\xcb\xf2\x1d\xa8\xc5\x8c\x23\xad\x9a\x7f\x03\x00\x00\xff\xff\xec\x86\xe8\xd3\x3d\x07\x00\x00")

func cloudPharmerIo_kubernetesversionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudPharmerIo_kubernetesversionsYaml,
		"cloud.pharmer.io_kubernetesversions.yaml",
	)
}

func cloudPharmerIo_kubernetesversionsYaml() (*asset, error) {
	bytes, err := cloudPharmerIo_kubernetesversionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloud.pharmer.io_kubernetesversions.yaml", size: 1853, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudPharmerIo_machinetypesV1Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x56\xcd\x6e\x1b\x37\x10\xbe\xeb\x29\x06\x68\x81\x48\x4d\x77\xd5\xa0\x97\x76\x2f\x46\xa0\x1a\x45\xe0\x1a\x35\x6c\x37\x17\xc7\x05\x46\xe4\x48\x62\xc4\xbf\x92\x43\x21\x4a\xdd\x77\x2f\xc8\xd5\x5a\xab\x95\xe5\x24\x40\x7b\x0b\x4f\x9a\xff\xd1\xf7\x71\x66\x89\x5e\xbd\xa5\x10\x95\xb3\x0d\xa0\x57\xf4\x81\xc9\x66\x29\xd6\xeb\x9f\x62\xad\xdc\x74\xf3\x6a\xb4\x56\x56\x36\x30\x4b\x91\x9d\xb9\xa6\xe8\x52\x10\xf4\x0b\x2d\x94\x55\xac\x9c\x1d\x19\x62\x94\xc8\xd8\x8c\x00\x44\x20\xcc\xca\x5b\x65\x28\x32\x1a\xdf\x80\x4d\x5a\x8f\x00\x34\xce\x49\xc7\xec\x03\x80\xde\xd7\xeb\x34\xa7\x60\x89\xa9\x54\xb1\x68\xa8\x01\xbf\xc2\x60\x28\x8c\x00\x5a\xd9\xa0\x58\x29\x4b\xbc\xf5\x14\x6b\xa1\x5d\x92\xf5\xce\xa5\x56\x6e\x14\x3d\x89\x9c\x6f\x19\x5c\xf2\x0d\x1c\xd9\xdb\x2c\xbb\x92\x02\x99\x96\x2e\xa8\x4e\xae\x7a\xc5\xb2\x84\xde\x47\xe1\x24\x15\xb1\xfd\xc3\x97\x6d\xf5\xdb\xad\x6f\xb5\x5a\x45\xbe\x18\x5a\x7e\x53\x91\x8b\xd5\xeb\x14\x50\x1f\xf6\x5c\x0c\x51\xd9\x65\xd2\x18\x0e\x4c\x23\x80\x28\x9c\xa7\x06\x66\x3a\x45\x2e\x6d\x6c\x5a\x1e\x4a\x83\x15\xa0\x94\x05\x5e\xd4\x57\x41\x59\xa6\x30\x73\x3a\x19\xfb\xd8\xfe\xfb\xe8\xec\x15\xf2\xaa\x81\x3a\x03\x51\xc7\x75\x2a\x96\x0e\xbb\x9b\x8b\x3f\x76\x72\xae\xd7\x40\xe4\xa0\xec\xf2\x44\xb0\xf0\x87\xc1\xb3\xab\x2f\x08\x0e\x68\x0e\x82\xaf\x5f\x5f\x9e\x0a\x6e\x1d\x36\xaf\x5a\x60\xc4\x8a\x0c\x36\x3b\x5f\xe7\xc9\xbe\xbe\x7a\xf3\xf6\xc7\x9b\x03\x35\x80\x0f\xce\x53\xe0\x47\xe6\xda\xd3\xbb\xb7\x3d\x2d\x80\xa4\x28\x82\xf2\x5c\x2e\xf4\x8b\x9c\xb0\xf5\x02\x99\x2f\x2c\x45\xe0\x15\x75\x48\x93\xdc\xf5\x00\x6e\x01\xbc\x52\x11\x02\xf9\x40\x91\x2c\x97\x4b\x7c\x90\x18\xb2\x13\x5a\x70\xf3\xf7\x24\xb8\x86\x1b\x0a\x39\x0d\xc4\x95\x4b\x5a\x82\x70\x76\x43\x81\x21\x90\x70\x4b\xab\x3e\x3e\xe6\x8e\xc0\xae\x14\xd5\xc8\xb4\xbb\x2b\xfb\x53\x98\xb5\xa8\x61\x83\x3a\xd1\xf7\x80\x56\x82\xc1\x2d\x04\xca\x55\x20\xd9\x5e\xbe\xe2\x12\x6b\xb8\x74\x81\x40\xd9\x85\x6b\x60\xc5\xec\x63\x33\x9d\x2e\x15\x77\xf3\x2a\x9c\x31\xc9\x2a\xde\x4e\x85\xb3\x1c\xd4\x3c\xb1\x0b\x71\x2a\x69\x43\x7a\x1a\xd5\xb2\xc2\x20\x56\x8a\x49\x70\x0a\x34\x45\xaf\xaa\xd2\xba\xe5\x32\xf4\x46\x7e\x13\x76\x13\x1e\x5f\x1c\xf4\x7a\xc4\x65\x7b\xca\xa8\x3c\xc3\x40\x1e\x18\x50\x11\x70\x17\xda\xfe\x8b\x3d\xd0\x59\x95\xd1\xb9\x3e\xbf\xb9\x85\xae\x74\x21\x63\x88\x7e\xc1\x7d\x1f\x18\xf7\x14\x64\xc0\x94\x5d\x50\x68\x49\x5c\x04\x67\x4a\x4e\xb2\xd2\x3b\x65\xb9\x08\x42\x2b\xb2\x43\xf8\x63\x9a\x1b\xc5\x99\xf7\xbf\x12\x45\xce\x5c\xd5\x30\x43\x6b\x1d\xc3\x9c\x20\x79\x89\x4c\xb2\x86\x37\x16\x66\x68\x48\xcf\x30\xd2\xff\x4e\x40\x59\x1d\x55\x06\xf6\xf3\x28\xe8\xef\xdf\xa1\x73\x8b\x5a\xcf\xd0\x2d\xcd\x13\x7c\xf5\x36\xdb\x8d\x27\x71\x30\x35\x92\xa2\x0a\xf9\x5e\x33\x32\xe5\x69\x18\x2e\xc8\xee\x3c\x3d\xb1\xb0\xdf\xc2\xdb\xa1\xfe\xe4\x7f\x2b\x41\x3e\x1d\xfb\xa3\xdd\xfe\xbe\x38\x56\x57\xbb\x44\x79\xae\x96\xbb\xe5\xfe\x94\xfd\xc9\x42\x00\x1e\x39\xcf\x63\x03\x7f\x8e\xdf\xbd\x7c\xa8\x26\x67\xe3\xf1\xdd\x0f\xd5\xcf\xf7\x2f\xc7\xef\xea\xf2\xe3\xbb\xc9\xd9\xe4\xa1\x13\x5e\x4e\x26\xe3\xf1\xdd\xc5\xe5\xaf\xb7\x57\xe7\xf7\x6a\xf2\x70\x67\x93\x59\xb7\xd2\xc3\xf8\x8e\xce\xef\x3f\x33\xc9\x64\x72\xf6\xed\x51\x2b\x1f\xaa\xfd\x17\xb2\x52\x96\x2b\x17\xaa\xb6\xeb\x06\x38\x24\x1a\x04\xc8\x3c\x17\x19\x5e\x79\x0a\xdb\xb9\x73\x9a\x70\xb8\xd4\xfa\xec\x7f\x09\x29\x52\xc5\xf5\x57\x56\x3e\xc5\x4a\x40\xf3\x15\xa4\x4f\x82\x44\xcb\xee\xd9\x73\x78\x14\x93\x79\x42\xfd\xec\xbd\xec\x8c\x18\x02\x6e\x87\xdb\x7e\xfd\xc4\x22\x79\x26\xd7\x47\x67\x8f\x57\xd8\x7f\xdd\x56\xfe\xf4\xe4\xb5\x7a\x98\xb0\x82\xfd\x93\xac\xd3\xec\xdf\x59\x9d\x66\xff\xe6\xeb\xd7\x18\xec\xfc\x23\x65\xcc\x9f\x4d\xd9\xa3\x22\xb2\x0b\xb8\xa4\xbe\x26\xcd\x1f\x9f\x01\x0d\xfc\xfd\xcf\xe8\xdf\x00\x00\x00\xff\xff\x37\x7c\xa8\x7f\x27\x0c\x00\x00")

func cloudPharmerIo_machinetypesV1YamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudPharmerIo_machinetypesV1Yaml,
		"cloud.pharmer.io_machinetypes.v1.yaml",
	)
}

func cloudPharmerIo_machinetypesV1Yaml() (*asset, error) {
	bytes, err := cloudPharmerIo_machinetypesV1YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloud.pharmer.io_machinetypes.v1.yaml", size: 3111, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudPharmerIo_machinetypesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x56\x4d\x6f\x23\x45\x13\xbe\xfb\x57\x94\xf4\xbe\xd2\xda\x84\x19\x13\x71\x81\xb9\x44\x2b\x13\xd0\x12\xc2\x46\x71\x76\x2f\xd9\x20\x95\xa7\xcb\x76\xe3\x9e\xee\xa6\xab\xda\xac\x97\xf0\xdf\x51\xf7\x78\xec\xb1\xe3\x40\x0e\x70\x5b\x9f\x5c\xdf\xd5\x4f\x7d\x4c\xa1\xd7\xef\x29\xb0\x76\xb6\x02\xf4\x9a\x3e\x0a\xd9\x44\x71\xb9\xfa\x86\x4b\xed\xc6\xeb\xf3\x19\x09\x9e\x0f\x56\xda\xaa\x0a\x26\x91\xc5\x35\xb7\xc4\x2e\x86\x9a\xbe\xa3\xb9\xb6\x5a\xb4\xb3\x83\x86\x04\x15\x0a\x56\x03\x80\x3a\x10\x26\xe6\x9d\x6e\x88\x05\x1b\x5f\x81\x8d\xc6\x0c\x00\x0c\xce\xc8\x70\xd2\x01\x40\xef\xcb\x55\x9c\x51\xb0\x24\x94\x43\x59\x6c\xa8\x02\xbf\xc4\xd0\x50\x18\x00\xb4\x74\x83\xf5\x52\x5b\x92\x8d\x27\x2e\x6b\xe3\xa2\x2a\xb7\x2a\xa5\x76\x03\xf6\x54\x27\x7f\xa8\x54\x4e\x04\xcd\x4d\xd0\x56\x28\x4c\x9c\x89\x8d\xcd\xb1\x0a\xf8\x71\xfa\xf6\xe7\x1b\x94\x65\x05\x65\x32\x28\x79\x15\x73\x0e\x6d\x84\xe9\xd5\xbb\x4c\xa5\x10\x15\xb0\x04\x6d\x17\x27\xcd\x6a\xdf\x37\x9b\xdc\xbc\xd0\x2c\x60\xd3\x33\xbb\x7d\x7d\x7d\xca\x6c\x11\x5c\xf4\x15\x3c\x79\x60\x6b\xb6\xc5\xac\x46\xa1\x85\x0b\xba\xa3\x8b\x1e\x5a\x89\x42\xef\xb9\x76\x8a\x32\xd9\x56\xec\xba\x85\xef\x6e\xe3\x5b\xae\xd1\x2c\x57\xc7\x92\x9f\x34\x4b\x96\x7a\x13\x03\x9a\x43\xd0\xb3\x80\xb5\x5d\x44\x83\xe1\x40\x34\x00\xf0\x81\x98\xc2\x9a\xde\xd9\x95\x75\xbf\xdb\xef\x35\x19\xc5\x15\xcc\xd1\x70\x12\x73\xed\xd2\x2b\x27\x26\xb2\xe4\x2c\x39\xce\xc2\xb6\x7b\xb8\x82\x3f\xfe\x1c\x00\xac\xd1\x68\x95\x1b\xa6\x7d\x94\xf3\x64\x5f\xdf\xbc\x79\xff\xf5\xb4\x5e\x52\x83\x2d\x33\x45\x72\x9e\x82\xec\xde\xde\xf6\xd0\xae\x7b\x77\x3c\x00\x45\x5c\x07\xed\xb3\x47\x78\x95\x5c\xb5\x3a\xa0\x52\xbf\x12\x83\x2c\x09\xd6\x2d\x8f\x14\x70\x0e\x03\x6e\x0e\xb2\xd4\x0c\x81\xf2\x9b\xac\xe4\x94\x7a\x6e\x21\xa9\xa0\x05\x37\xfb\x95\x6a\x29\x61\x9a\xde\x1d\x18\x78\xe9\xa2\x51\x50\x3b\xbb\xa6\x20\x10\xa8\x76\x0b\xab\x3f\xed\x3c\x33\x88\xcb\x21\x0d\x0a\x6d\x71\xee\x7e\xb9\x55\x2d\x9a\x04\x42\xa4\x2f\x01\xad\x82\x06\x37\x10\x28\xc5\x80\x68\x7b\xde\xb2\x0a\x97\x70\xed\x02\x81\xb6\x73\x57\xc1\x52\xc4\x73\x35\x1e\x2f\xb4\x74\xf3\x5a\xbb\xa6\x89\x56\xcb\x66\x5c\x3b\x2b\x41\xcf\xa2\xb8\xc0\x63\x45\x6b\x32\x63\xd6\x8b\x02\x43\xbd\xd4\x42\xb5\xc4\x40\x63\xf4\xba\xc8\x89\x5b\xc9\x43\xdf\xa8\xff\xed\xca\xf3\xaa\x97\xe9\x51\xb3\xb6\xbf\xdc\x60\xcf\xe2\x9e\x9a\x0c\x34\x03\x6e\xcd\xda\xfc\xf7\xf0\x26\x56\x42\xe5\xf6\x72\x7a\x07\x5d\xd0\x5c\x82\x43\xcc\x33\xda\x7b\x33\xde\x03\x9f\x80\xd2\x76\x4e\xa1\x2d\xdc\x3c\xb8\x26\x7b\x24\xab\xbc\xd3\x56\x32\x51\x1b\x4d\xf6\x10\x74\x8e\xb3\x46\x4b\xaa\xf4\x6f\x91\x58\x52\x7d\x4a\x98\xa0\xb5\x4e\x60\x46\x10\xbd\x42\x21\x55\xc2\x1b\x0b\x13\x6c\xc8\x4c\x90\xe9\x3f\x87\x3d\x8f\x5a\x91\x20\xfd\x67\xe0\xfb\xcb\xf6\x50\xb1\x45\x6b\xc7\xee\xb6\xe3\xc9\x0a\xf5\xe6\x7f\xea\xa9\x3e\x98\x0e\x45\xac\x43\xea\x60\x41\xa1\xd4\xf7\xc7\x6b\xe4\xf9\x99\xec\xed\xa9\xcd\x21\xf7\x99\xd7\x64\x03\x1f\x8f\x75\xd1\x6e\xde\xce\x8f\x99\xc5\xd6\x45\x9a\x9b\xc5\x76\xed\x3d\x95\x9e\x08\x00\xe0\x51\xd2\xac\x55\xf0\xcb\xf0\xc3\xd9\x63\x31\xba\x18\x0e\xef\xbf\x2a\xbe\x7d\x38\x1b\x7e\x28\xf3\x9f\x2f\x46\x17\xa3\xc7\x8e\x38\x1b\x8d\x86\xc3\xfb\xab\xeb\x1f\xee\x6e\x2e\x1f\xf4\xe8\xf1\xde\xc6\x66\xd5\x52\x8f\xc3\x7b\xba\x7c\x78\xa1\x93\xd1\xe8\xe2\xff\x47\x89\x7c\x2c\xf6\x9f\xbd\x42\x5b\x29\x5c\x28\xda\x8c\x2b\x90\x10\xe9\x40\x5d\xa5\xbe\x4f\x70\xaa\xd3\x58\xce\x9c\x33\x84\xf6\xc8\x66\x5f\xe5\x97\x16\x40\x69\x5e\x7d\xae\xc0\xa9\x0a\x04\x6c\x3e\x03\x73\x12\x18\x5a\xa4\xe5\x75\x8c\x83\x16\x6a\x9e\x30\xff\xa6\xf3\x3a\x11\x86\x80\x9b\xc3\x3d\xbd\x7a\xb2\x14\x9e\xf5\xf2\xc9\xd9\xe3\x25\xf4\xef\xa5\x92\x3e\x14\x69\x1d\xf6\x5d\x15\xd0\x5d\x83\x1d\xdd\x9d\x79\x1d\xdd\x1d\x99\x7d\xcf\x07\xfb\xf9\x88\xb5\xee\xee\xf0\xf5\xf9\x9e\xda\x1e\xb0\xed\xe9\x98\x05\x00\xf9\xe0\x52\xbd\x8a\xb0\xb8\x80\x0b\xda\x72\xfe\x0a\x00\x00\xff\xff\x3f\x7f\x0b\x5b\xd3\x0b\x00\x00")

func cloudPharmerIo_machinetypesYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudPharmerIo_machinetypesYaml,
		"cloud.pharmer.io_machinetypes.yaml",
	)
}

func cloudPharmerIo_machinetypesYaml() (*asset, error) {
	bytes, err := cloudPharmerIo_machinetypesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloud.pharmer.io_machinetypes.yaml", size: 3027, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cloud.pharmer.io_cloudproviders.v1.yaml":     cloudPharmerIo_cloudprovidersV1Yaml,
	"cloud.pharmer.io_cloudproviders.yaml":        cloudPharmerIo_cloudprovidersYaml,
	"cloud.pharmer.io_credentialformats.v1.yaml":  cloudPharmerIo_credentialformatsV1Yaml,
	"cloud.pharmer.io_credentialformats.yaml":     cloudPharmerIo_credentialformatsYaml,
	"cloud.pharmer.io_credentials.v1.yaml":        cloudPharmerIo_credentialsV1Yaml,
	"cloud.pharmer.io_credentials.yaml":           cloudPharmerIo_credentialsYaml,
	"cloud.pharmer.io_kubernetesversions.v1.yaml": cloudPharmerIo_kubernetesversionsV1Yaml,
	"cloud.pharmer.io_kubernetesversions.yaml":    cloudPharmerIo_kubernetesversionsYaml,
	"cloud.pharmer.io_machinetypes.v1.yaml":       cloudPharmerIo_machinetypesV1Yaml,
	"cloud.pharmer.io_machinetypes.yaml":          cloudPharmerIo_machinetypesYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"cloud.pharmer.io_cloudproviders.v1.yaml":     {cloudPharmerIo_cloudprovidersV1Yaml, map[string]*bintree{}},
	"cloud.pharmer.io_cloudproviders.yaml":        {cloudPharmerIo_cloudprovidersYaml, map[string]*bintree{}},
	"cloud.pharmer.io_credentialformats.v1.yaml":  {cloudPharmerIo_credentialformatsV1Yaml, map[string]*bintree{}},
	"cloud.pharmer.io_credentialformats.yaml":     {cloudPharmerIo_credentialformatsYaml, map[string]*bintree{}},
	"cloud.pharmer.io_credentials.v1.yaml":        {cloudPharmerIo_credentialsV1Yaml, map[string]*bintree{}},
	"cloud.pharmer.io_credentials.yaml":           {cloudPharmerIo_credentialsYaml, map[string]*bintree{}},
	"cloud.pharmer.io_kubernetesversions.v1.yaml": {cloudPharmerIo_kubernetesversionsV1Yaml, map[string]*bintree{}},
	"cloud.pharmer.io_kubernetesversions.yaml":    {cloudPharmerIo_kubernetesversionsYaml, map[string]*bintree{}},
	"cloud.pharmer.io_machinetypes.v1.yaml":       {cloudPharmerIo_machinetypesV1Yaml, map[string]*bintree{}},
	"cloud.pharmer.io_machinetypes.yaml":          {cloudPharmerIo_machinetypesYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
